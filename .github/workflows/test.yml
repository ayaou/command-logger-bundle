name: Tests and Release

on:
  push:
    branches:
      - '*'  # Matches all branches
  pull_request:
    branches:
      - '*'  # Matches PRs targeting any branch

# Add permissions at the workflow level
permissions:
  contents: write  # For pushing tags and commits
  issues: write    # For @semantic-release/github to create issues on failure (optional)

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: sqlite3, pdo_sqlite

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --dev

      - name: Run integration tests
        run: vendor/bin/phpunit tests/Integration

      - name: Run unit tests
        run: vendor/bin/phpunit tests/Unit

  release:
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/github

      - name: Run semantic-release
        id: semantic-release  # Add an ID to capture outputs
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release archive
        if: steps.semantic-release.outputs.released == 'true'  # Only if a release was made
        run: |
          mkdir release-files
          cp -r src config tests docs release-files/
          cp CHANGELOG.md composer.json LICENSE README.md release-files/
          cd release-files
          zip -r ../release.zip .
        shell: bash

      - name: Upload release asset
        if: steps.semantic-release.outputs.released == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.semantic-release.outputs.release-url }}  # From semantic-release
          asset_path: release.zip
          asset_name: command-logger-bundle-${{ steps.semantic-release.outputs.version }}.zip
          asset_content_type: application/zip